@{
    Layout = "_AdminLayout";
}
<div class="container mt-5">
    <div class="row">
        <!-- Cột bên trái: Danh sách các hành động -->
        <div class="col-md-6">
            <div class="card">
                <div class="d-flex justify-content-end mb-3">
                    <!-- Căn phải cho nút -->
                    <button class="btn btn-success mt-2" onclick="openAddActionModal()">Thêm hành động mới</button>
                </div>
                <div class="card-header bg-primary text-white text-center">
                    <h3 class="mb-0">Danh sách các hành động</h3>
                </div>
                <div class="card-body">
                    <div id="actionContainer">
                        @Html.Partial("_ActionList") <!-- Chèn Partial View -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Cột bên phải: Danh sách các dịch vụ -->
        <div class="col-md-6">
            <div class="card">
                <div class="d-flex justify-content-end mb-3">
                    <!-- Căn phải cho nút -->
                    <button class="btn btn-success mt-2" onclick="openAddServiceModal()">Thêm dịch vụ mới</button>
                </div>
                <div class="card-header bg-primary text-white text-center">
                    <h3 class="mb-0">Danh sách các dịch vụ</h3>
                </div>
                <div class="card-body">
                    <div id="serviceContainer">
                        @Html.Partial("_ServiceList") <!-- Chèn Partial View -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="addSeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Thêm dịch vụ mới</h2>
                <button class="close" type="button" data-bs-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <form id="addServiceForm">
                    <div class="mb-3">
                        <label for="seid" class="form-label">ID</label>
                        <input type="text" class="form-control" id="seid" placeholder="ID" required>
                    </div>
                    <div class="mb-3">
                        <label for="sename" class="form-label">Tên dịch vụ</label>
                        <input type="text" class="form-control" id="sename" placeholder="Tên dịch vụ" required>
                    </div>
                    <p id="ermessage" style="color: red; display: none;"></p>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="addSe" onclick="addService()">Thêm dịch vụ</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addAcModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Thêm hành động mới</h2>
                <button class="close" type="button" data-bs-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <form id="addActionForm">
                    <div class="mb-3">
                        <label for="acid" class="form-label">ID</label>
                        <input type="text" class="form-control" id="acid" placeholder="ID" required>
                    </div>
                    <div class="mb-3">
                        <label for="acname" class="form-label">Tên hành động</label>
                        <input type="text" class="form-control" id="acname" placeholder="Tên hành động" required>
                    </div>
                    <p id="ermessage" style="color: red; display: none;"></p>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="addAc" onclick="addAction()">Thêm hành động</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Mở modal thêm hành động
    function openAddActionModal() {
        $('#addAcModal').modal('show');
    }

    // Xóa thông tin trong các trường khi modal đóng
    $('#addAcModal').on('hidden.bs.modal', function () {
        document.getElementById("addActionForm").reset(); // Reset form
        document.getElementById("ermessage").style.display = 'none'; // Ẩn thông báo lỗi
    });

    // Hàm thêm hành động
    async function addAction() {
        const acid = document.getElementById("acid").value;
        const acname = document.getElementById("acname").value;

        // Kiểm tra các trường không được để trống
        if (!acid || !acname) {
            document.getElementById("ermessage").textContent = "Vui lòng điền đầy đủ thông tin.";
            document.getElementById("ermessage").style.display = 'block';
            return;
        }

        // Gọi API để thêm hành động
        try {
            const response = await fetch(`https://localhost:7182/api/Auth/addaction`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${sessionStorage.getItem("Token")}`
                },
                body: JSON.stringify({
                    actionId: acid,
                    actionname: acname
                })
            });

            if (response.ok) {
                alert("Thêm hành động thành công!");
                $('#addAcModal').modal('hide'); // Đóng modal

                // Hủy khởi tạo DataTable nếu đã có
                if ($.fn.DataTable.isDataTable('#actionTable')) {
                    $('#actionTable').DataTable().destroy();
                }

                loadactions(); // Tải lại danh sách hành động
            } else {
                let errorMessage = "Có lỗi xảy ra."; // Thông điệp mặc định
                const result = await response.text();

                if (result) {
                    if (result.includes("Action đã tồn tại.")) {
                        errorMessage = "Action đã tồn tại.";
                    } else {
                        errorMessage = result;
                    }
                }

                // Hiển thị thông báo lỗi
                document.getElementById("ermessage").textContent = errorMessage;
                document.getElementById("ermessage").style.display = 'block';
            }
        } catch (error) {
            document.getElementById("ermessage").textContent = "Có lỗi xảy ra khi thêm hành động.";
            document.getElementById("ermessage").style.display = 'block';
        }
    }
</script>
<script>
    // Mở modal thêm dịch vụ
    function openAddServiceModal() {
        $('#addSeModal').modal('show');
    }

    // Xóa thông tin trong các trường khi modal đóng
    $('#addSeModal').on('hidden.bs.modal', function () {
        document.getElementById("addServiceForm").reset(); // Reset form
        document.getElementById("ermessage").style.display = 'none'; // Ẩn thông báo lỗi
    });

    // Hàm thêm dịch vụ
    async function addService() {
        const seid = document.getElementById("seid").value;
        const sename = document.getElementById("sename").value;

        // Kiểm tra các trường không được để trống
        if (!seid || !sename) {
            document.getElementById("ermessage").textContent = "Vui lòng điền đầy đủ thông tin.";
            document.getElementById("ermessage").style.display = 'block';
            return;
        }

        // Gọi API để thêm dịch vụ
        try {
            const response = await fetch(`https://localhost:7182/api/Auth/addservice`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${sessionStorage.getItem("Token")}`
                },
                body: JSON.stringify({
                    serviceId: seid,
                    servicename: sename
                })
            });

            if (response.ok) {
                alert("Thêm dịch vụ thành công!");
                $('#addSeModal').modal('hide'); // Đóng modal

                // Hủy khởi tạo DataTable nếu đã có
                if ($.fn.DataTable.isDataTable('#serviceTable')) {
                    $('#serviceTable').DataTable().destroy();
                }

                loadservices(); // Tải lại danh sách dịch vụ
            } else {
                let errorMessage = "Có lỗi xảy ra."; // Thông điệp mặc định
                const result = await response.text();

                if (result) {
                    if (result.includes("Service đã tồn tại.")) {
                        errorMessage = "Service đã tồn tại.";
                    } else {
                        errorMessage = result;
                    }
                }

                // Hiển thị thông báo lỗi
                document.getElementById("ermessage").textContent = errorMessage;
                document.getElementById("ermessage").style.display = 'block';
            }
        } catch (error) {
            document.getElementById("ermessage").textContent = "Có lỗi xảy ra khi thêm dịch vụ.";
            document.getElementById("ermessage").style.display = 'block';
        }
    }
</script>
