@{
    Layout = "_CustomerLayout";
}
<div id="cartContainer" class="cart-container mb-4">
    <h2 class="cart-title">Giỏ hàng của bạn</h2>
    <button id="clearCartButton" class="btn clear-cart">Xóa tất cả</button>
    <table id="cartTable" class="cart-table">
        <thead>
            <tr>
                <th>Mã sân bóng</th>
                <th>Tên sân bóng</th>
                <th>Địa chỉ</th>
                <th>Ngày Đặt Sân</th>
                <th>Giờ bắt đầu</th>
                <th>Giờ kết thúc</th>
                <th>Đơn giá</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="cartItems">
            <!-- Sản phẩm trong giỏ hàng sẽ được thêm vào đây -->
        </tbody>
    </table>
    <div>
        <input type="button" value="Xác nhận thông tin" id="xntt" class="btn btn-secondary" />
    </div>

    <div class="d-none" id="ktratt">
        <h3>Vui lòng kiểm tra lại thông tin</h3>
        <div class="row">
            <!-- Tên người đặt -->
            <div class="col-3">
                <div class="d-flex align-items-center">
                    <label class="form-label mb-0">Tên khách hàng:</label>
                    <span class="form-control ms-2 small-span" id="nameorder" name="nameorder"></span>
                </div>
            </div>

            <!-- Số điện thoại -->
            <div class="col-3">
                <div class="d-flex align-items-center">
                    <label class="form-label mb-0">Số điện thoại:</label>
                    <span class="form-control ms-2 small-span" id="phoneorder" name="phoneorder"></span>
                </div>
            </div>

            <div class="row col-6">
                <div class="col-6 d-flex text-uppercase  align-items-center">
                    <label class="form-label mb-0">Tổng tiền: <span class="ms-2" id="totalPrice"
                            name="totalPrice">0</span> VND</label>
                </div>
                <div class="col-6">
                    <button data-auth="yeucau_add" class="btn btn-success btn-small" onclick="requestOrd()">Gửi yêu cầu</button>
                </div>
            </div>
        </div>
    </div>


</div>

<link rel="stylesheet" href="~/css/cart.css" />

<script src="~/js/cart.js"></script>

<script>

    let makh = null; // Khai báo biến lưu mã khách hàng toàn cục
    // Kiểm tra nếu token đã có trong sessionStorage hoặc localStorage
    const orderToken = sessionStorage.getItem('Token'); // Hoặc localStorage.getItem('Token');

    if (orderToken) {
        // Gọi API để lấy thông tin người dùng từ token
        fetchUserInfo(orderToken);
    }

    function fetchUserInfo(token) {
        fetch('https://localhost:7182/api/Account/userinfo', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
            .then(response => response.json())
            .then(data => {
                const tennguoidung = data.tennguoidung;
                const sdt = data.sdt;
                console.log(data)
                makh = data.manguoidung;
                // Cập nhật phần tử hiển thị Tennguoidung
                document.getElementById('nameorder').innerText = tennguoidung;
                document.getElementById('phoneorder').innerText = sdt;
            })
            .catch(error => console.error('Error fetching user info:', error));
    }


    async function requestOrd() {
        const jwtToken = sessionStorage.getItem('Token');
        const cart = JSON.parse(sessionStorage.getItem('gioHang')) || [];

        if (!jwtToken || cart.length === 0) {
            console.error("Vui lòng đăng nhập và thêm sản phẩm vào giỏ hàng.");
            return;
        }

        if (!makh) {
            console.error("Không tìm thấy mã khách hàng. Vui lòng kiểm tra lại.");
            return;
        }

        // Tạo các chi tiết yêu cầu đặt sân từ giỏ hàng
        const chiTietYcdsVM = cart.map(item => ({
            MaSb: item.MaSb,
            Magio: item.Magio,
            Ngaysudung: item.Ngaysudung,
            GhiChu: item.GhiChu || ""
        }));

        const requestPayload = {
            MaKh: makh, // mã khách hàng từ fetchUserInfo
            ChiTietYcdsVM: chiTietYcdsVM
        };

        try {
            // Gửi yêu cầu đến API
            const response = await fetch('https://localhost:7182/api/YeuCauDatSan/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Role': 'KhachHang',  // Truyền role vào header
                    'Authorization': `Bearer ${jwtToken}`
                },
                body: JSON.stringify(requestPayload)
            });

            if (!response.ok) {
                // Nếu response không thành công, lấy thông báo lỗi từ API (nếu có)
                const errorData = await response.json(); // Sử dụng await tại đây
                const errorMessage = errorData?.message || "Không thể gửi yêu cầu";

                // Hiển thị thông báo warning với Toastr
                alert(errorMessage);
                return;
            }

            const data = await response.json(); // Sử dụng await tại đây
            alert("Gửi yêu cầu thành công!");
            sessionStorage.removeItem('gioHang'); // Xóa giỏ hàng sau khi gửi
            loadCart(); // Cập nhật giỏ hàng trên giao diện
            updateCartCount();
            document.getElementById('ktratt').classList.add('d-none');

        } catch (error) {
            console.error('Error:', error);
            alert("Đã xảy ra lỗi khi gửi yêu cầu.");
        }
    }



    $(document).ready(function () {
        // Khi bấm nút Xác nhận thông tin
        $('#xntt').click(function () {
            // Ẩn phần hiện tại
            $(this).closest('div').hide();

            // Hiển thị phần kiểm tra thông tin
            $('#ktratt').removeClass('d-none');

            // Cuộn trang xuống phần cartTable
            $('#ktratt')[0].scrollIntoView({
                behavior: 'smooth', // Cuộn mượt mà
                block: 'start'      // Cuộn đến vị trí bắt đầu của phần tử
            });
        });
    });
</script>